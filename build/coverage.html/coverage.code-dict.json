{"/home/travis/build/npmtest/node-npmtest-redux-api-middleware/test.js":"/* istanbul instrument in package npmtest_redux_api_middleware */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/lib.npmtest_redux_api_middleware.js":"/* istanbul instrument in package npmtest_redux_api_middleware */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_redux_api_middleware = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_redux_api_middleware = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-redux-api-middleware && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_redux_api_middleware */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_redux_api_middleware\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_redux_api_middleware.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_redux_api_middleware.rollup.js'] =\n            local.assetsDict['/assets.npmtest_redux_api_middleware.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_redux_api_middleware.__dirname + '/lib.npmtest_redux_api_middleware.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/index.js":"/**\n * Redux middleware for calling an API\n * @module redux-api-middleware\n * @requires isomorphic-fetch\n * @requires lodash.isplainobject\n * @exports {symbol} CALL_API\n * @exports {function} isRSAA\n * @exports {function} validateRSAA\n * @exports {function} isValidRSAA\n * @exports {error} InvalidRSAA\n * @exports {error} InternalError\n * @exports {error} RequestError\n * @exports {error} ApiError\n * @exports {function} getJSON\n * @exports {ReduxMiddleWare} apiMiddleware\n */\n\n/**\n * @typedef {function} ReduxMiddleware\n * @param {object} store\n * @returns {ReduxNextHandler}\n *\n * @typedef {function} ReduxNextHandler\n * @param {function} next\n * @returns {ReduxActionHandler}\n *\n * @typedef {function} ReduxActionHandler\n * @param {object} action\n * @returns undefined\n */\n\n'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _CALL_API = require('./CALL_API');\n\nvar _CALL_API2 = _interopRequireDefault(_CALL_API);\n\nvar _validation = require('./validation');\n\nvar _errors = require('./errors');\n\nvar _util = require('./util');\n\nvar _middleware = require('./middleware');\n\nexports.CALL_API = _CALL_API2['default'];\nexports.isRSAA = _validation.isRSAA;\nexports.validateRSAA = _validation.validateRSAA;\nexports.isValidRSAA = _validation.isValidRSAA;\nexports.InvalidRSAA = _errors.InvalidRSAA;\nexports.InternalError = _errors.InternalError;\nexports.RequestError = _errors.RequestError;\nexports.ApiError = _errors.ApiError;\nexports.getJSON = _util.getJSON;\nexports.apiMiddleware = _middleware.apiMiddleware;","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/CALL_API.js":"/**\n * Symbol key that carries API call info interpreted by this Redux middleware.\n *\n * @constant {symbol}\n * @access public\n * @default\n */\n'use strict';\n\nvar _Symbol = require('babel-runtime/core-js/symbol')['default'];\n\nexports.__esModule = true;\nvar CALL_API = _Symbol('Call API');\n\nexports['default'] = CALL_API;\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/validation.js":"'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _CALL_API = require('./CALL_API');\n\nvar _CALL_API2 = _interopRequireDefault(_CALL_API);\n\nvar _lodashIsplainobject = require('lodash.isplainobject');\n\nvar _lodashIsplainobject2 = _interopRequireDefault(_lodashIsplainobject);\n\n/**\n * Is the given action a plain JavaScript object with a [CALL_API] property?\n *\n * @function isRSAA\n * @access public\n * @param {object} action - The action to check\n * @returns {boolean}\n */\nfunction isRSAA(action) {\n  return _lodashIsplainobject2['default'](action) && action.hasOwnProperty(_CALL_API2['default']);\n}\n\n/**\n * Is the given object a valid type descriptor?\n *\n * @function isValidTypeDescriptor\n * @access private\n * @param {object} obj - The object to check agains the type descriptor definition\n * @returns {boolean}\n */\nfunction isValidTypeDescriptor(obj) {\n  var validKeys = ['type', 'payload', 'meta'];\n\n  if (!_lodashIsplainobject2['default'](obj)) {\n    return false;\n  }\n  for (var key in obj) {\n    if (! ~validKeys.indexOf(key)) {\n      return false;\n    }\n  }\n  if (!('type' in obj)) {\n    return false;\n  } else if (typeof obj.type !== 'string' && typeof obj.type !== 'symbol') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Checks an action against the RSAA definition, returning a (possibly empty)\n * array of validation errors.\n *\n * @function validateRSAA\n * @access public\n * @param {object} action - The action to check against the RSAA definition\n * @returns {array}\n */\nfunction validateRSAA(action) {\n  var validationErrors = [];\n  var validCallAPIKeys = ['endpoint', 'method', 'body', 'headers', 'credentials', 'bailout', 'types'];\n  var validMethods = ['GET', 'HEAD', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'];\n  var validCredentials = ['omit', 'same-origin', 'include'];\n\n  if (!isRSAA(action)) {\n    validationErrors.push('RSAAs must be plain JavaScript objects with a [CALL_API] property');\n    return validationErrors;\n  }\n\n  for (var key in action) {\n    if (key !== [_CALL_API2['default']]) {\n      validationErrors.push('Invalid root key: ' + key);\n    }\n  }\n\n  var callAPI = action[_CALL_API2['default']];\n  if (!_lodashIsplainobject2['default'](callAPI)) {\n    validationErrors.push('[CALL_API] property must be a plain JavaScript object');\n  }\n  for (var key in callAPI) {\n    if (! ~validCallAPIKeys.indexOf(key)) {\n      validationErrors.push('Invalid [CALL_API] key: ' + key);\n    }\n  }\n\n  var endpoint = callAPI.endpoint;\n  var method = callAPI.method;\n  var headers = callAPI.headers;\n  var credentials = callAPI.credentials;\n  var types = callAPI.types;\n  var bailout = callAPI.bailout;\n\n  if (typeof endpoint === 'undefined') {\n    validationErrors.push('[CALL_API] must have an endpoint property');\n  } else if (typeof endpoint !== 'string' && typeof endpoint !== 'function') {\n    validationErrors.push('[CALL_API].endpoint property must be a string or a function');\n  }\n  if (typeof method === 'undefined') {\n    validationErrors.push('[CALL_API] must have a method property');\n  } else if (typeof method !== 'string') {\n    validationErrors.push('[CALL_API].method property must be a string');\n  } else if (! ~validMethods.indexOf(method.toUpperCase())) {\n    validationErrors.push('Invalid [CALL_API].method: ' + method.toUpperCase());\n  }\n\n  if (typeof headers !== 'undefined' && !_lodashIsplainobject2['default'](headers) && typeof headers !== 'function') {\n    validationErrors.push('[CALL_API].headers property must be undefined, a plain JavaScript object, or a function');\n  }\n  if (typeof credentials !== 'undefined') {\n    if (typeof credentials !== 'string') {\n      validationErrors.push('[CALL_API].credentials property must be undefined, or a string');\n    } else if (! ~validCredentials.indexOf(credentials)) {\n      validationErrors.push('Invalid [CALL_API].credentials: ' + credentials);\n    }\n  }\n  if (typeof bailout !== 'undefined' && typeof bailout !== 'boolean' && typeof bailout !== 'function') {\n    validationErrors.push('[CALL_API].bailout property must be undefined, a boolean, or a function');\n  }\n\n  if (typeof types === 'undefined') {\n    validationErrors.push('[CALL_API] must have a types property');\n  } else if (!Array.isArray(types) || types.length !== 3) {\n    validationErrors.push('[CALL_API].types property must be an array of length 3');\n  } else {\n    var requestType = types[0];\n    var successType = types[1];\n    var failureType = types[2];\n\n    if (typeof requestType !== 'string' && typeof requestType !== 'symbol' && !isValidTypeDescriptor(requestType)) {\n      validationErrors.push('Invalid request type');\n    }\n    if (typeof successType !== 'string' && typeof successType !== 'symbol' && !isValidTypeDescriptor(successType)) {\n      validationErrors.push('Invalid success type');\n    }\n    if (typeof failureType !== 'string' && typeof failureType !== 'symbol' && !isValidTypeDescriptor(failureType)) {\n      validationErrors.push('Invalid failure type');\n    }\n  }\n\n  return validationErrors;\n}\n\n/**\n * Is the given action a valid RSAA?\n *\n * @function isValidRSAA\n * @access public\n * @param {object} action - The action to check against the RSAA definition\n * @returns {boolean}\n */\nfunction isValidRSAA(action) {\n  return !validateRSAA(action).length;\n}\n\nexports.isRSAA = isRSAA;\nexports.isValidTypeDescriptor = isValidTypeDescriptor;\nexports.validateRSAA = validateRSAA;\nexports.isValidRSAA = isValidRSAA;","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/errors.js":"/**\n * Error class for an RSAA that does not conform to the RSAA definition\n *\n * @class InvalidRSAA\n * @access public\n * @param {array} validationErrors - an array of validation errors\n */\n'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nexports.__esModule = true;\n\nvar InvalidRSAA = (function (_Error) {\n  _inherits(InvalidRSAA, _Error);\n\n  function InvalidRSAA(validationErrors) {\n    _classCallCheck(this, InvalidRSAA);\n\n    _Error.call(this);\n    this.name = 'InvalidRSAA';\n    this.message = 'Invalid RSAA';\n    this.validationErrors = validationErrors;\n  }\n\n  /**\n   * Error class for a custom `payload` or `meta` function throwing\n   *\n   * @class InternalError\n   * @access public\n   * @param {string} message - the error message\n   */\n  return InvalidRSAA;\n})(Error);\n\nvar InternalError = (function (_Error2) {\n  _inherits(InternalError, _Error2);\n\n  function InternalError(message) {\n    _classCallCheck(this, InternalError);\n\n    _Error2.call(this);\n    this.name = 'InternalError';\n    this.message = message;\n  }\n\n  /**\n   * Error class for an error raised trying to make an API call\n   *\n   * @class RequestError\n   * @access public\n   * @param {string} message - the error message\n   */\n  return InternalError;\n})(Error);\n\nvar RequestError = (function (_Error3) {\n  _inherits(RequestError, _Error3);\n\n  function RequestError(message) {\n    _classCallCheck(this, RequestError);\n\n    _Error3.call(this);\n    this.name = 'RequestError';\n    this.message = message;\n  }\n\n  /**\n   * Error class for an API response outside the 200 range\n   *\n   * @class ApiError\n   * @access public\n   * @param {number} status - the status code of the API response\n   * @param {string} statusText - the status text of the API response\n   * @param {object} response - the parsed JSON response of the API server if the\n   *  'Content-Type' header signals a JSON response\n   */\n  return RequestError;\n})(Error);\n\nvar ApiError = (function (_Error4) {\n  _inherits(ApiError, _Error4);\n\n  function ApiError(status, statusText, response) {\n    _classCallCheck(this, ApiError);\n\n    _Error4.call(this);\n    this.name = 'ApiError';\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.message = status + ' - ' + statusText;\n  }\n\n  return ApiError;\n})(Error);\n\nexports.InvalidRSAA = InvalidRSAA;\nexports.InternalError = InternalError;\nexports.RequestError = RequestError;\nexports.ApiError = ApiError;","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/util.js":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _Promise = require('babel-runtime/core-js/promise')['default'];\n\nexports.__esModule = true;\n\nvar _errors = require('./errors');\n\n/**\n * Extract JSON body from a server response\n *\n * @function getJSON\n * @access public\n * @param {object} res - A raw response object\n * @returns {promise|undefined}\n */\nfunction getJSON(res) {\n  var contentType, emptyCodes;\n  return _regeneratorRuntime.async(function getJSON$(context$1$0) {\n    while (1) switch (context$1$0.prev = context$1$0.next) {\n      case 0:\n        contentType = res.headers.get('Content-Type');\n        emptyCodes = [204, 205];\n\n        if (!(! ~emptyCodes.indexOf(res.status) && contentType && ~contentType.indexOf('json'))) {\n          context$1$0.next = 8;\n          break;\n        }\n\n        context$1$0.next = 5;\n        return _regeneratorRuntime.awrap(res.json());\n\n      case 5:\n        return context$1$0.abrupt('return', context$1$0.sent);\n\n      case 8:\n        context$1$0.next = 10;\n        return _regeneratorRuntime.awrap(_Promise.resolve());\n\n      case 10:\n        return context$1$0.abrupt('return', context$1$0.sent);\n\n      case 11:\n      case 'end':\n        return context$1$0.stop();\n    }\n  }, null, this);\n}\n\n/**\n * Blow up string or symbol types into full-fledged type descriptors,\n *   and add defaults\n *\n * @function normalizeTypeDescriptors\n * @access private\n * @param {array} types - The [CALL_API].types from a validated RSAA\n * @returns {array}\n */\nfunction normalizeTypeDescriptors(types) {\n  var requestType = types[0];\n  var successType = types[1];\n  var failureType = types[2];\n\n  if (typeof requestType === 'string' || typeof requestType === 'symbol') {\n    requestType = { type: requestType };\n  }\n\n  if (typeof successType === 'string' || typeof successType === 'symbol') {\n    successType = { type: successType };\n  }\n  successType = _extends({\n    payload: function payload(action, state, res) {\n      return getJSON(res);\n    }\n  }, successType);\n\n  if (typeof failureType === 'string' || typeof failureType === 'symbol') {\n    failureType = { type: failureType };\n  }\n  failureType = _extends({\n    payload: function payload(action, state, res) {\n      return getJSON(res).then(function (json) {\n        return new _errors.ApiError(res.status, res.statusText, json);\n      });\n    }\n  }, failureType);\n\n  return [requestType, successType, failureType];\n}\n\n/**\n * Evaluate a type descriptor to an FSA\n *\n * @function actionWith\n * @access private\n * @param {object} descriptor - A type descriptor\n * @param {array} args - The array of arguments for `payload` and `meta` function properties\n * @returns {object}\n */\nfunction actionWith(descriptor, args) {\n  return _regeneratorRuntime.async(function actionWith$(context$1$0) {\n    while (1) switch (context$1$0.prev = context$1$0.next) {\n      case 0:\n        context$1$0.prev = 0;\n        context$1$0.next = 3;\n        return _regeneratorRuntime.awrap(typeof descriptor.payload === 'function' ? descriptor.payload.apply(descriptor, args) : descriptor.payload);\n\n      case 3:\n        descriptor.payload = context$1$0.sent;\n        context$1$0.next = 10;\n        break;\n\n      case 6:\n        context$1$0.prev = 6;\n        context$1$0.t0 = context$1$0['catch'](0);\n\n        descriptor.payload = new _errors.InternalError(context$1$0.t0.message);\n        descriptor.error = true;\n\n      case 10:\n        context$1$0.prev = 10;\n        context$1$0.next = 13;\n        return _regeneratorRuntime.awrap(typeof descriptor.meta === 'function' ? descriptor.meta.apply(descriptor, args) : descriptor.meta);\n\n      case 13:\n        descriptor.meta = context$1$0.sent;\n        context$1$0.next = 21;\n        break;\n\n      case 16:\n        context$1$0.prev = 16;\n        context$1$0.t1 = context$1$0['catch'](10);\n\n        delete descriptor.meta;\n        descriptor.payload = new _errors.InternalError(context$1$0.t1.message);\n        descriptor.error = true;\n\n      case 21:\n        return context$1$0.abrupt('return', descriptor);\n\n      case 22:\n      case 'end':\n        return context$1$0.stop();\n    }\n  }, null, this, [[0, 6], [10, 16]]);\n}\n\nexports.getJSON = getJSON;\nexports.normalizeTypeDescriptors = normalizeTypeDescriptors;\nexports.actionWith = actionWith;","/home/travis/build/npmtest/node-npmtest-redux-api-middleware/node_modules/redux-api-middleware/lib/middleware.js":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _isomorphicFetch = require('isomorphic-fetch');\n\nvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\nvar _lodashIsplainobject = require('lodash.isplainobject');\n\nvar _lodashIsplainobject2 = _interopRequireDefault(_lodashIsplainobject);\n\nvar _CALL_API = require('./CALL_API');\n\nvar _CALL_API2 = _interopRequireDefault(_CALL_API);\n\nvar _validation = require('./validation');\n\nvar _errors = require('./errors');\n\nvar _util = require('./util');\n\n/**\n * A Redux middleware that processes RSAA actions.\n *\n * @type {ReduxMiddleware}\n * @access public\n */\nfunction apiMiddleware(_ref) {\n  var _this = this;\n\n  var getState = _ref.getState;\n\n  return function (next) {\n    return function callee$2$0(action) {\n      var validationErrors, _callAPI, _requestType, callAPI, endpoint, headers, method, body, credentials, bailout, types, _normalizeTypeDescriptors, requestType, successType, failureType, res;\n\n      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {\n        while (1) switch (context$3$0.prev = context$3$0.next) {\n          case 0:\n            if (_validation.isRSAA(action)) {\n              context$3$0.next = 2;\n              break;\n            }\n\n            return context$3$0.abrupt('return', next(action));\n\n          case 2:\n            validationErrors = _validation.validateRSAA(action);\n\n            if (!validationErrors.length) {\n              context$3$0.next = 7;\n              break;\n            }\n\n            _callAPI = action[_CALL_API2['default']];\n\n            if (_callAPI.types && Array.isArray(_callAPI.types)) {\n              _requestType = _callAPI.types[0];\n\n              if (_requestType && _requestType.type) {\n                _requestType = _requestType.type;\n              }\n              next({\n                type: _requestType,\n                payload: new _errors.InvalidRSAA(validationErrors),\n                error: true\n              });\n            }\n            return context$3$0.abrupt('return');\n\n          case 7:\n            callAPI = action[_CALL_API2['default']];\n            endpoint = callAPI.endpoint;\n            headers = callAPI.headers;\n            method = callAPI.method;\n            body = callAPI.body;\n            credentials = callAPI.credentials;\n            bailout = callAPI.bailout;\n            types = callAPI.types;\n            _normalizeTypeDescriptors = _util.normalizeTypeDescriptors(types);\n            requestType = _normalizeTypeDescriptors[0];\n            successType = _normalizeTypeDescriptors[1];\n            failureType = _normalizeTypeDescriptors[2];\n            context$3$0.prev = 19;\n\n            if (!(typeof bailout === 'boolean' && bailout || typeof bailout === 'function' && bailout(getState()))) {\n              context$3$0.next = 22;\n              break;\n            }\n\n            return context$3$0.abrupt('return');\n\n          case 22:\n            context$3$0.next = 30;\n            break;\n\n          case 24:\n            context$3$0.prev = 24;\n            context$3$0.t0 = context$3$0['catch'](19);\n            context$3$0.next = 28;\n            return _regeneratorRuntime.awrap(_util.actionWith(_extends({}, requestType, {\n              payload: new _errors.RequestError('[CALL_API].bailout function failed'),\n              error: true\n            }), [action, getState()]));\n\n          case 28:\n            context$3$0.t1 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t1));\n\n          case 30:\n            if (!(typeof endpoint === 'function')) {\n              context$3$0.next = 41;\n              break;\n            }\n\n            context$3$0.prev = 31;\n\n            endpoint = endpoint(getState());\n            context$3$0.next = 41;\n            break;\n\n          case 35:\n            context$3$0.prev = 35;\n            context$3$0.t2 = context$3$0['catch'](31);\n            context$3$0.next = 39;\n            return _regeneratorRuntime.awrap(_util.actionWith(_extends({}, requestType, {\n              payload: new _errors.RequestError('[CALL_API].endpoint function failed'),\n              error: true\n            }), [action, getState()]));\n\n          case 39:\n            context$3$0.t3 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t3));\n\n          case 41:\n            if (!(typeof headers === 'function')) {\n              context$3$0.next = 52;\n              break;\n            }\n\n            context$3$0.prev = 42;\n\n            headers = headers(getState());\n            context$3$0.next = 52;\n            break;\n\n          case 46:\n            context$3$0.prev = 46;\n            context$3$0.t4 = context$3$0['catch'](42);\n            context$3$0.next = 50;\n            return _regeneratorRuntime.awrap(_util.actionWith(_extends({}, requestType, {\n              payload: new _errors.RequestError('[CALL_API].headers function failed'),\n              error: true\n            }), [action, getState()]));\n\n          case 50:\n            context$3$0.t5 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t5));\n\n          case 52:\n            context$3$0.next = 54;\n            return _regeneratorRuntime.awrap(_util.actionWith(requestType, [action, getState()]));\n\n          case 54:\n            context$3$0.t6 = context$3$0.sent;\n            next(context$3$0.t6);\n            context$3$0.prev = 56;\n            context$3$0.next = 59;\n            return _regeneratorRuntime.awrap(_isomorphicFetch2['default'](endpoint, { method: method, body: body, credentials: credentials, headers: headers }));\n\n          case 59:\n            res = context$3$0.sent;\n            context$3$0.next = 68;\n            break;\n\n          case 62:\n            context$3$0.prev = 62;\n            context$3$0.t7 = context$3$0['catch'](56);\n            context$3$0.next = 66;\n            return _regeneratorRuntime.awrap(_util.actionWith(_extends({}, requestType, {\n              payload: new _errors.RequestError(context$3$0.t7.message),\n              error: true\n            }), [action, getState()]));\n\n          case 66:\n            context$3$0.t8 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t8));\n\n          case 68:\n            if (!res.ok) {\n              context$3$0.next = 75;\n              break;\n            }\n\n            context$3$0.next = 71;\n            return _regeneratorRuntime.awrap(_util.actionWith(successType, [action, getState(), res]));\n\n          case 71:\n            context$3$0.t9 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t9));\n\n          case 75:\n            context$3$0.next = 77;\n            return _regeneratorRuntime.awrap(_util.actionWith(_extends({}, failureType, {\n              error: true\n            }), [action, getState(), res]));\n\n          case 77:\n            context$3$0.t10 = context$3$0.sent;\n            return context$3$0.abrupt('return', next(context$3$0.t10));\n\n          case 79:\n          case 'end':\n            return context$3$0.stop();\n        }\n      }, null, _this, [[19, 24], [31, 35], [42, 46], [56, 62]]);\n    };\n  };\n}\n\nexports.apiMiddleware = apiMiddleware;\n\n// Do not process actions without a [CALL_API] property\n\n// Try to dispatch an error request FSA for invalid RSAAs\n\n// Parse the validated RSAA action\n\n// Should we bail out?\n\n// Process [CALL_API].endpoint function\n\n// Process [CALL_API].headers function\n\n// We can now dispatch the request FSA\n\n// Make the API call\n\n// The request was malformed, or there was a network error\n\n// Process the server response"}